# MCP Database Server 환경 설정 예시
# 이 파일을 .env로 복사하고 실제 값으로 수정하세요

# ===========================================
# 보안 설정 (중요!)
# ===========================================

# 읽기 전용 모드 (기본값: true)
# true: SELECT 쿼리만 허용, false: 모든 쿼리 허용
READ_ONLY=true

# 엄격한 읽기 전용 모드 (기본값: true)
# true: 모든 보안 검증 강제, false: 기본 검증만
STRICT_READONLY=true

# ===========================================
# 데이터베이스 설정
# ===========================================

# 데이터베이스 타입 (mysql, postgresql, sqlite)
DB_TYPE=mysql

# 데이터베이스 연결 정보
DB_HOST=localhost
DB_PORT=3306
DB_NAME=your_database
DB_USER=readonly_user
DB_PASSWORD=secure_password

# MySQL 전용 설정
DB_CHARSET=utf8mb4

# PostgreSQL 전용 설정
DB_SCHEMA=public

# SQLite 전용 설정
# DB_PATH=./database.sqlite

# ===========================================
# 보안 강화 설정
# ===========================================

# 연결 타임아웃 (초)
DB_CONNECT_TIMEOUT=10

# 읽기 타임아웃 (초)
DB_READ_TIMEOUT=30

# 쓰기 타임아웃 (초)
DB_WRITE_TIMEOUT=30

# SSL 사용 여부 (MySQL/PostgreSQL)
DB_SSL_ENABLED=true

# ===========================================
# 로깅 설정
# ===========================================

# 로그 레벨 (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# 보안 로그 활성화
SECURITY_LOGGING=true

# ===========================================
# 성능 설정
# ===========================================

# 최대 연결 수
MAX_CONNECTIONS=10

# 연결 풀 크기
CONNECTION_POOL_SIZE=5

# 쿼리 타임아웃 (초)
QUERY_TIMEOUT=30

# ===========================================
# 샘플 설정 예시
# ===========================================

# MySQL 샘플 설정
# DB_TYPE=mysql
# DB_HOST=localhost
# DB_PORT=3306
# DB_NAME=sample_db
# DB_USER=mcp_readonly
# DB_PASSWORD=readonly_password
# DB_CHARSET=utf8mb4

# PostgreSQL 샘플 설정
# DB_TYPE=postgresql
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=sample_db
# DB_USER=mcp_readonly
# DB_PASSWORD=readonly_password
# DB_SCHEMA=public

# SQLite 샘플 설정
# DB_TYPE=sqlite
# DB_PATH=./sample.db

# ===========================================
# 보안 주의사항
# ===========================================

# 1. 프로덕션 환경에서는 반드시 READ_ONLY=true로 설정
# 2. 데이터베이스 계정은 최소 권한 원칙 적용
# 3. 강력한 비밀번호 사용
# 4. SSL 연결 사용 권장
# 5. 정기적인 보안 업데이트 수행